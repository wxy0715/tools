spring.profiles.active=dev

server.port=9090
spring.application.name=safe
#swagger 开关
swagger.enable=true

#返回json的全局时间格式
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

# 设置日志级别
logging.level.root=info
#mybatis-plus日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#mybatis-plus 配置
mybatis-plus.mapper-locations= classpath*:/mapper/**.xml
#逻辑删除字段
mybatis-plus.global-config.db-config.logic-delete-field=deleted
#配置逻辑删除字段为1是删除
mybatis-plus.global-config.db-config.logic-delete-value=1
#配置逻辑删除字段为0是未删除
mybatis-plus.global-config.db-config.logic-not-delete-value=0

##################    连接池配置    ################
#连接池建立时创建的初始化连接数
spring.datasource.druid.initial-size=5
#连接池中最大的活跃连接数
spring.datasource.druid.max-active=20
#连接池中最小的活跃连接数
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=30000
#是否在获得连接后检测其可用性
spring.datasource.druid.test-on-borrow=false
#是否在连接放回连接池后检测其可用性
spring.datasource.druid.test-on-return=false
#是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000

#redis
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-idle=30
spring.redis.lettuce.pool.min-idle=1
spring.redis.lettuce.pool.max-wait=PT10S
spring.redis.timeout=PT10S

spring.devtools.restart.poll-interval=3000ms
spring.devtools.restart.quiet-period=2999ms


# 单文件最大支持文件大小
spring.servlet.multipart.maxFileSize=100MB
# 文件总大小最大支持文件大小
spring.servlet.multipart.maxRequestSize=100MB
#解决文件过大 全局异常监控到后但是前端没有响应
server.tomcat.max-swallow-size=-1

#JWT 密钥
jwt.secretKey=safe
jwt.accessTokenExpireTime=PT2H
jwt.refreshTokenExpireTime=PT8H
jwt.refreshTokenExpireAppTime=P30D
jwt.issuer=longersec